#!/usr/bin/env bash

set -eEu -o pipefail

status() {
    echo "### $1"
}

sizeAsJson() {
    local desc="$1" filename="$2"
    local line
    line="{ \"name\": \"$desc\", \"minified\": $(wc -c < dist/"$filename"), \"gzipped\": $(wc -c < dist/"$filename".gz) }"
    echo "$line"
}

status "Clean"
rm -rf dist/

status "Compile"
tsc

status "Bundle module"
rollup dist/fudgel.js --file dist/fudgel.mjs --format esm

status "Minify module"
terser --ecma 6 --compress --mangle --module -o dist/fudgel.min.mjs -- dist/fudgel.mjs
gzip -9 -c dist/fudgel.min.mjs > dist/fudgel.min.mjs.gz

status "Bundle UMD"
rollup dist/fudgel.js --file dist/fudgel.umd.js --format umd --name Fudgel

status "Minify UMD"
terser --ecma 6 --compress --mangle -o dist/fudgel.umd.min.js -- dist/fudgel.umd.js
gzip -9 -c dist/fudgel.umd.min.js > dist/fudgel.umd.min.js.gz

for NAME in component di emitter router slot; do
    status "Extracting just $NAME"
    rollup dist/only-$NAME.js --file dist/only-$NAME.mjs --format esm

    status "Minify just $NAME"
    terser --ecma 6 --compress --mangle -o dist/only-$NAME.min.mjs -- dist/only-$NAME.mjs
    gzip -9 -c dist/only-$NAME.min.mjs > dist/only-$NAME.min.mjs.gz
done

status "Update docs"
if [[ -z "${UNMINIFIED-}" ]]; then
    cp dist/fudgel.min.mjs docs/fudgel.min.js
else
    cp dist/fudgel.mjs docs/fudgel.min.js
fi
(
    echo '['
    echo "$(sizeAsJson "Everything (ESM)" fudgel.min.mjs),"
    echo "$(sizeAsJson "Everything (UMD)" fudgel.umd.min.js),"
    echo "$(sizeAsJson "component()" only-component.min.mjs),"
    echo "$(sizeAsJson "di()" only-di.min.mjs),"
    echo "$(sizeAsJson "new Emitter()" only-emitter.min.mjs),"
    echo "$(sizeAsJson "RouterComponent" only-router.min.mjs),"
    sizeAsJson "SlotComponent" only-slot.min.mjs
    echo ']'
) > docs/fudgel-sizes.json
git diff docs/fudgel-sizes.json
